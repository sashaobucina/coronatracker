{"version":3,"sources":["components/SearchBar/SearchBar.js","components/SearchButton/SearchButton.js","helpers/strings.js","components/Alerts/ErrorAlert.js","components/Slider/DateSlider.js","components/Graph/GraphDerivative.js","components/Graph/GraphOverall.js","components/Graph/GraphTrajectory.js","components/Buttons/ScaleButtonGroup.js","components/Buttons/SliderButtonGroup.js","components/Buttons/SpeedButtonGroup.js","components/Graph/GraphBundle.js","helpers/conversions.js","components/Tabs/TabsContainer.js","components/Tabs/CountryTab.js","helpers/misc.js","components/App.js","index.js"],"names":["SearchBar","this","props","classes","suggestions","updateState","style","textAlign","id","input","color","clearIndicator","popupIndicator","popupIndicatorOpen","paper","noOptions","freeSolo","options","onSelect","e","target","value","noOptionsText","renderInput","params","TextField","className","textfield","label","margin","variant","InputProps","type","Component","withStyles","background","borderColor","SearchButton","fetchData","Button","fullWidth","root","onClick","startIcon","height","strings","ErrorAlert","open","message","handleClose","onClose","Snackbar","autoHideDuration","anchorOrigin","horizontal","vertical","Alert","severity","DateSlider","valueToDate","dates","bind","Slider","colorPrimary","colorSecondary","rail","slider","track","defaultValue","valueLabelFormat","aria-labelledby","marks","step","min","max","length","valueLabelDisplay","onChange","_","GraphDerivative","data","dataKey","stroke","fill","travellerWidth","strokeWidth","dot","GraphOverall","minWidth","title","x1","y1","x2","y2","offset","stopColor","stopOpacity","fillOpacity","GraphWeekly","scale","domain","top","right","left","bottom","strokeDasharray","name","ticks","angle","position","fontSize","line","animationDuration","useStyles","makeStyles","ScaleButtonGroup","updateScale","Tooltip","placement","ToggleButtonGroup","exclusive","newScale","ToggleButton","SliderButtonGroup","useState","playing","setPlaying","indexValue","maxIndex","onStepClick","speed","updateIndexState","useEffect","interval","setInterval","clearInterval","playButton","IconButton","size","Pause","PlayArrow","ButtonGroup","SkipNext","Restore","ArrowBack","ArrowForward","toggleRoot","SpeedButtonGroup","setSpeed","newSpeed","GraphBundle","country","overall","first_derivative_data","second_derivative_data","weeklyData","filter","entry","confirmed","map","idx","arr","weeklyVal","cases","weekly","Math","round","convertDataToWeekly","n","slice","convertToDates","Grid","container","direction","justify","alignItems","marginTop","item","xs","sm","Typography","align","md","lg","textTransform","GraphTrajectory","fontStyle","indicator","ScrollableTabs","tabs","tabIndex","AppBar","backgroundColor","Tabs","indicatorColor","scrollButtons","TabsContainer","clearState","handleTabChange","removeTab","marginLeft","marginRight","spacing","Close","ClearAll","CountryTab","index","handleChange","Tab","component","isDev","React","createElement","getCountry","countries","reduce","acc","curr","toLowerCase","FETCH_URL","PREFETCH_URL","App","maybeCountry","state","datum","userInput","validCountries","setState","idxValue","indexOf","currCountries","currDatum","currTabs","url","axios","get","then","res","newTab","validated","catch","err","console","error","prefetchData","updateValidation","key","stopPropagation","fn","i","newTabIndex","newTabs","tab","showTabs","showGraphs","increment","updateInputState","Link","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bfa5e5d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport AutoComplete from '@material-ui/lab/Autocomplete'\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = {\n  paper: {\n    color: '#3BBA9C',\n    background: '#3C3F58',\n  },\n  color: {\n    color: '#3BBA9C'\n  },\n  textfield: {\n    background: '#3C3F58',\n    '& label': {\n      color: '#3BBA9C'\n    },\n    '& label.Mui-focused': {\n      color: '#3BBA9C'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: '#3BBA9C'\n      },\n      '&:hover fieldset': {\n        borderColor: '#3BBA9C'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#3BBA9C'\n      }\n    }\n  }\n}\n\nclass SearchBar extends Component {\n  render() {\n    const { classes, suggestions, updateState } = this.props;\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <AutoComplete\n          id=\"autocomplete-main\"\n          classes={{\n            input: classes.color,\n            clearIndicator: classes.color,\n            popupIndicator: classes.color,\n            popupIndicatorOpen: classes.color,\n            paper: classes.paper,\n            noOptions: classes.color\n          }}\n          freeSolo\n          options={suggestions}\n          onSelect={(e) => updateState(e.target.value)}\n          noOptionsText={\"No countries match your search...\"}\n          renderInput={params => (\n            <TextField\n              {...params}\n              className={classes.textfield}\n              label=\"Search for a country\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputProps={{ ...params.InputProps, type: 'search' }}\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(SearchBar);","import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { withStyles } from \"@material-ui/styles\";\n\n\nconst styles = {\n  root: {\n    background: '#3C3F58',\n    color: '#3BBA9C',\n    height: 48,\n    \"&:hover\": {\n      background: '#3C3F58',\n    }\n  }\n}\n\nclass SearchButton extends Component {\n  render() {\n    const { classes, fetchData } = this.props\n    return (\n        <Button\n          variant=\"contained\"\n          color=\"inherit\"\n          fullWidth={true}\n          className={classes.root}\n          onClick={fetchData}\n          startIcon={ <SearchIcon /> }\n        >\n          Search\n        </Button>\n    )\n  }\n}\n\nexport default withStyles(styles)(SearchButton);","export const strings = {\n  invalid: \"Invalid country selected - please select another!\",\n  fetch: \"Unable to fetch data - please check back in a bit!\"\n}","import React, { Component } from \"react\";\nimport { Snackbar} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { strings } from \"../../helpers/strings\";\n\nclass ErrorAlert extends Component {\n  render() {\n    const { open, message, handleClose } = this.props;\n    const onClose = message === strings.fetch ? () => {} : handleClose;\n    return (\n      <Snackbar open={open} autoHideDuration={6000} onClose={onClose} anchorOrigin={{  horizontal: \"left\", vertical: \"bottom\"}}>\n        <Alert severity=\"error\" variant=\"filled\" onClose={handleClose}>\n          {message}\n        </Alert>\n      </Snackbar>\n    )\n  }\n}\n\nexport default ErrorAlert;","import React, { Component } from \"react\";\nimport { Slider } from \"@material-ui/core\";\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = {\n  color: {\n    color: '#3BBA9C'\n  },\n  slider: {\n    height: 5,\n  }\n}\n\nclass DateSlider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueToDate = this.valueToDate.bind(this);\n  }\n\n  valueToDate = (value) => {\n    return this.props.dates[value];\n  }\n\n  render() {\n    const { classes, dates, updateState, value } = this.props;\n    return (\n      <Slider\n        classes={{\n          colorPrimary: classes.color,\n          colorSecondary: classes.color,\n          rail: classes.slider,\n          track: classes.slider\n        }}\n        defaultValue={0}\n        valueLabelFormat={this.valueToDate}\n        aria-labelledby=\"discrete-slider\"\n        marks\n        step={1}\n        min={0}\n        max={dates.length - 1}\n        valueLabelDisplay=\"on\"\n        value={value}\n        onChange={(_, value) => updateState(value)}\n      />\n    )\n  }\n}\n\nexport default withStyles(styles)(DateSlider);","import React, { Component } from \"react\";\nimport { Brush, CartesianGrid, Legend, XAxis, YAxis, LineChart, Line, ResponsiveContainer, Tooltip } from \"recharts\";\n\nclass GraphDerivative extends Component {\n  render() {\n    const { data, dataKey } = this.props;\n    return (\n      <ResponsiveContainer height={400}>\n        <LineChart data={data} >\n          <Brush stroke='#3BBA9C' height={25} fill=\"#3C3F58\" travellerWidth={8} />\n          <CartesianGrid strokeWidth={0.5} />\n          <XAxis dataKey=\"date\" stroke={'#3BBA9C'} />\n          <YAxis stroke={'#3BBA9C'} />\n          <Line type=\"monotone\" dataKey={dataKey} stroke=\"#3BBA9C\" strokeWidth={2} dot={false} />\n          <Tooltip />\n          <Legend />\n        </LineChart>\n      </ResponsiveContainer>\n    )\n  }\n}\n\nexport default GraphDerivative","import React, { Component } from \"react\";\nimport { Brush, Legend, AreaChart, XAxis, YAxis, Area, Tooltip, ResponsiveContainer } from \"recharts\";\n\nclass GraphOverall extends Component {\n  render() {\n    const { data } = this.props;\n    return (\n      <ResponsiveContainer height={500} style={{ minWidth: \"100%\" }}>\n        <AreaChart data={data} title=\"Cases of COVID-19\">\n          <defs>\n            <linearGradient id=\"colorConfirmed\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#a15c03\" stopOpacity={0.8}/>\n              <stop offset=\"95%\" stopColor=\"#a15c03\" stopOpacity={0}/>\n            </linearGradient>\n            <linearGradient id=\"colorDeaths\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#9c3321\" stopOpacity={0.8}/>\n              <stop offset=\"95%\" stopColor=\"#9c3321\" stopOpacity={0}/>\n            </linearGradient>\n            {/* <linearGradient id=\"colorRecovered\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#447a28\" stopOpacity={0.8}/>\n              <stop offset=\"95%\" stopColor=\"#447a28\" stopOpacity={0}/>\n            </linearGradient> */}\n          </defs>\n          <Brush stroke='#3BBA9C' height={25} fill=\"#3C3F58\" travellerWidth={8} />\n          <XAxis dataKey=\"date\" stroke={'#3BBA9C'} />\n          <YAxis stroke={'#3BBA9C'} />\n          <Area type=\"monotone\" dataKey=\"confirmed\" stroke=\"#a15c03\" fillOpacity={1} fill=\"url(#colorConfirmed)\"/>\n          <Area type=\"monotone\" dataKey=\"deaths\" stroke=\"red\" fillOpacity={1} fill=\"url(#colorDeaths)\"/>\n          {/* <Area type=\"monotone\" dataKey=\"recovered\" stroke=\"green\" fillOpacity={1} fill=\"url(#colorRecovered)\" /> */}\n          <Tooltip />\n          <Legend />\n        </AreaChart>\n      </ResponsiveContainer>\n    )\n  }\n}\n\nexport default GraphOverall;","import React, { Component } from \"react\";\nimport { Tooltip, XAxis, YAxis, ResponsiveContainer, CartesianGrid, ScatterChart, Scatter, Legend } from \"recharts\";\n\n// convert to scatter chart with line prop\nclass GraphWeekly extends Component {\n  render() {\n    const { data, scale } = this.props;\n    const domain = scale === \"log\" ? [1, 10000000] : [1, 10000];\n    const ticks = [1, 10, 100, 1000, 10000, 100000, 10000000];\n    return (\n      <ResponsiveContainer height={550} style={{ minWidth: \"100%\" }}>\n        <ScatterChart margin={{ top: 15, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeWidth={0.5} strokeDasharray=\"3 3\"/>\n          <XAxis dataKey=\"cases\" name=\"Total Confirmed Cases\" stroke={'#3BBA9C'} type=\"number\" domain={[1, 1000000]} scale=\"log\" ticks={ticks} />\n          <YAxis \n            dataKey=\"weekly\"\n            name=\"Weekly Confirmed Cases\"\n            label={{ value: \"Confirmed Cases (per week)\", angle: -90, position: \"insideBottomLeft\", fill: \"#3BBA9C\", fontSize: 18 }} \n            stroke={'#3BBA9C'}\n            type=\"number\"\n            domain={domain}\n            scale={scale}\n          />\n          <Scatter name=\"Total Confirmed Cases\" data={data} fill=\"#3BBA9C\" stroke=\"#3BBA9C\" line animationDuration={400} />\n          <Tooltip />\n          <Legend />\n        </ScatterChart>\n      </ResponsiveContainer>\n    )\n  }\n}\n\nexport default GraphWeekly;","import React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    background: '#3C3F58',\n    color: '#3BBA9C',\n    \"&:hover\": {\n      background: '#3C3F58',\n    }\n  }\n})\n\nexport default function ScaleButtonGroup(props) {\n  const { scale, updateScale } = props;\n  const classes = useStyles();\n\n  const handleChange = (_, newScale) => {\n    if (newScale) {\n      updateScale(newScale)\n    }\n  }\n\n  return (\n    <Tooltip title=\"Convert scale\" placement=\"top\">\n      <ToggleButtonGroup\n        className={classes.root}\n        value={scale}\n        exclusive\n        onChange={handleChange}\n      >\n\n        <ToggleButton className={classes.root} value=\"log\">\n          Log\n        </ToggleButton>\n        <ToggleButton className={classes.root} value=\"linear\">\n          Linear\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Tooltip>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport { IconButton, Tooltip, ButtonGroup } from \"@material-ui/core\";\nimport { ArrowBack, ArrowForward, PlayArrow, Pause, Restore, SkipNext } from \"@material-ui/icons\";\n\nexport default function SliderButtonGroup(props) {\n  const [ playing, setPlaying ] = useState(true);\n  const { indexValue, maxIndex, onStepClick, speed, updateIndexState } = props;\n\n  useEffect(() => {\n    if (playing) {\n      const interval = setInterval(() => {\n        const { indexValue, maxIndex, updateIndexState } = props;\n        if (indexValue < maxIndex) {\n          updateIndexState(indexValue + 1);\n        } else {\n          setPlaying(!playing);\n        }\n      }, 100 / speed);\n      return () => clearInterval(interval)\n    }\n  }, [playing, speed, props]);\n\n  const restore = () => {\n    setPlaying(false);\n    updateIndexState(0);\n  }\n\n  const playButton = playing\n    ? (\n      <Tooltip title=\"Pause animation\" placement=\"bottom\">\n        <IconButton color=\"inherit\" size=\"medium\" onClick={() => setPlaying(false)}>\n          <Pause />\n        </IconButton>\n      </Tooltip>\n    )\n    : (\n      <Tooltip title=\"Play animation\" placement=\"bottom\">\n        <IconButton onClick={() => indexValue < maxIndex ? setPlaying(true) : {}}>\n          <PlayArrow />\n        </IconButton>\n      </Tooltip>\n    );\n\n  return (\n    <ButtonGroup color=\"inherit\">\n      {playButton}\n      <Tooltip title=\"Skip animation\" placement=\"bottom\">\n        <IconButton onClick={() => updateIndexState(maxIndex)}>\n          <SkipNext />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Reset\" placement=\"bottom\">\n        <IconButton onClick={restore}>\n          <Restore />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Decrement\">\n        <IconButton onClick={(_) => onStepClick(maxIndex, false)}>\n          <ArrowBack />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Increment\">\n        <IconButton onClick={(_) => onStepClick(maxIndex, true)}>\n          <ArrowForward />\n        </IconButton>\n      </Tooltip>\n    </ButtonGroup>\n  );\n}","import React from \"react\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\"\nimport { makeStyles } from \"@material-ui/styles\"\n\nconst useStyles = makeStyles({\n  root: {\n    background: '#3C3F58',\n    color: '#3BBA9C'\n  },\n  toggleRoot: {\n    background: '#3C3F58',\n    color: '#3BBA9C'\n  }\n});\n\nexport default function SpeedButtonGroup(props) {\n  const { speed, setSpeed } = props;\n  const classes = useStyles();\n\n  const handleChange = (_, newSpeed) => {\n    if (newSpeed) {\n      setSpeed(newSpeed);\n    }\n  };\n\n  return (\n    <ToggleButtonGroup\n      className={classes.root}\n      value={speed}\n      exclusive\n      onChange={handleChange}\n    >\n      <ToggleButton className={classes.toggleRoot} value={0.25}>\n        0.25x\n      </ToggleButton>\n      <ToggleButton className={classes.toggleRoot} value={0.5}>\n        0.5x\n      </ToggleButton>\n      <ToggleButton className={classes.toggleRoot} value={1}>\n        1x\n      </ToggleButton>\n      <ToggleButton className={classes.toggleRoot} value={2}>\n        2x\n      </ToggleButton>\n    </ToggleButtonGroup>\n  )\n}","import React, { useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport DateSlider from \"../Slider/DateSlider\"\nimport GraphDerivative from \"./GraphDerivative\"\nimport GraphOverall from \"./GraphOverall\";\nimport GraphTrajectory from \"./GraphTrajectory\";\nimport ScaleButtonGroup from \"../Buttons/ScaleButtonGroup\";\nimport SliderButtonGroup from \"../Buttons/SliderButtonGroup\";\nimport { convertDataToWeekly, convertToDates } from \"../../helpers/conversions\";\nimport SpeedButtonGroup from \"../Buttons/SpeedButtonGroup\";\n\nexport default function GraphBundle(props) {\n  const [ speed, setSpeed ] = useState(1);\n  const { country, data, indexValue, scale, onStepClick, updateIndexState, updateScale } = props;\n\n  // collect data in proper format\n  const { overall, first_derivative_data, second_derivative_data } = data;\n  const weeklyData = convertDataToWeekly(overall);\n  const dates = convertToDates(overall, weeklyData.length);\n  const maxIndex = dates.length - 1;\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ marginTop: 30 }}>\n      <Grid item xs={12} sm={12}>\n        <Typography align=\"center\" variant=\"h4\">COVID-19 Cases ({country})</Typography>\n      </Grid>\n      <Grid item xs={10} sm={10}>\n        <GraphOverall data={overall} />\n      </Grid>\n      <Grid item xs={5} sm={5} md={5} lg={5} >\n        <Typography align=\"center\" variant=\"h5\">Rate of Change in Cases</Typography>\n        <GraphDerivative data={first_derivative_data} dataKey={\"first_derivative\"} />\n      </Grid>\n      <Grid item xs={5} sm={5} md={5} lg={5} >\n        <Typography align=\"center\" variant=\"h5\">Acceleration of Change</Typography>\n        <GraphDerivative data={second_derivative_data} dataKey={\"second_derivative\"} />\n      </Grid>\n      <Grid item xs={10} sm={10} md={10} lg={10} style={{ margin: 20 }}>\n        <Typography align=\"center\" style={{ textTransform: \"capitalize\" }} variant=\"h5\">COVID-19 Trajectory ({scale})</Typography>\n        <ScaleButtonGroup scale={scale} updateScale={updateScale} />\n        <GraphTrajectory data={weeklyData.slice(0, indexValue)} scale={scale} />\n        <Typography align=\"center\" fontStyle=\"oblique\"style={{ marginTop: 20 }} variant=\"body2\">← Tune slider to view changes over time →</Typography>\n        <DateSlider dates={dates} updateState={updateIndexState} value={indexValue} />\n        <Grid container direction=\"column\">\n          <Grid item> \n            <SliderButtonGroup\n              indexValue={indexValue}\n              maxIndex={maxIndex}\n              speed={speed}\n              onStepClick={onStepClick}\n              updateIndexState={updateIndexState}\n            />\n          </Grid>\n          <Grid item>\n            <SpeedButtonGroup speed={speed} setSpeed={setSpeed} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}","export function convertDataToWeekly(overall) {\n  const filteredData = overall.filter((entry) => entry.confirmed !== 0);\n\n  let data = filteredData.map((entry, idx, arr) => {\n    const weeklyVal = idx < 7 ? 0 : arr[idx][\"confirmed\"] - arr[idx - 7][\"confirmed\"];\n    return {\n      cases: entry.confirmed,\n      weekly: Math.round(weeklyVal)\n    };\n  });\n\n  return data.filter((entry) => entry.weekly >= 10);\n}\n\nexport function convertToDates(overall, offset) {\n  const n = overall.length\n  return overall.slice(n - offset, n).map(entry => entry[\"date\"])\n}","import React from \"react\";\nimport { AppBar, ButtonGroup, Grid, IconButton, Tabs, Tooltip, Typography} from \"@material-ui/core\";\nimport { ArrowBack, ArrowForward, Close, ClearAll } from \"@material-ui/icons\";\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  indicator: {\n    background: \"#3BBA9C\"\n  }\n});\n\nfunction ScrollableTabs(props) {\n  const { tabs, tabIndex } = props;\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" color=\"inherit\" style={{ backgroundColor: \"#3C3F58\" }}>\n      <Tabs\n        classes={{ indicator: classes.indicator }}\n        indicatorColor=\"primary\"\n        scrollButtons=\"auto\"\n        variant=\"scrollable\"\n        value={tabIndex}\n      >\n        {[...tabs]}\n      </Tabs>\n    </AppBar>\n  )\n};\n\nexport default function TabsContainer(props) {\n  const { clearState, handleTabChange, tabs, tabIndex, removeTab } = props;\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" style={{ marginTop: 50, marginLeft: 5, marginRight: 5 }} spacing={1}>\n      <Grid container direction=\"row\" justify=\"flex-start\">\n        <Grid item sm={1} md={1} lg={1} />\n        <Grid item xs={4} sm={2} md={2} lg={2}>\n          <Typography variant=\"subtitle1\">Country Tabs</Typography>\n        </Grid>\n      </Grid>\n      <Grid container direction=\"row\">\n        <Grid item xs={1} sm={1} md={1} lg={1} />\n        <Grid item xs={12} sm={8} md={8} lg={8}>\n          <ScrollableTabs tabs={tabs} tabIndex={tabIndex} />\n        </Grid>\n        <Grid item xs={4} sm={2} md={2} lg={2}>\n          <ButtonGroup color=\"inherit\">\n          <Tooltip title=\"Previous tab\" placement=\"top\">\n              <IconButton onClick={() => handleTabChange(Math.max(0, tabIndex - 1))}>\n                <ArrowBack />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Next tab\" placement=\"top\">\n              <IconButton onClick={() => handleTabChange(Math.min(tabIndex + 1, tabs.length - 1))}>\n                <ArrowForward />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Close tab\" placement=\"top\">\n              <IconButton onClick={(e) => removeTab(e, tabIndex)}>\n                <Close />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Clear all\" placement=\"top\">\n              <IconButton onClick={() => clearState(\"\")}>\n                <ClearAll />\n              </IconButton>\n            </Tooltip>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}","import React from \"react\";\nimport { Tab, IconButton } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\n\nexport default function CountryTab(props) {\n  const { country, index, handleClose, handleChange } = props;\n\n  return (\n    <Tab\n      component=\"div\"\n      onClick={() => handleChange(index)}\n      label={(\n        <div>\n          {country}\n          <IconButton color=\"inherit\" size=\"small\" onClick={(e) => handleClose(e, index)}>\n            <Close />\n          </IconButton>\n        </div>\n      )}\n    />\n  )\n}","import React from \"react\";\n\nfunction isDev() {\n  return '_self' in React.createElement('div');\n}\n\nexport function getCountry(country, countries) {\n  return countries.reduce((acc, curr) => {\n    return curr.toLowerCase() === country.toLowerCase() ? curr : acc\n  }, null)\n}\n\nexport const FETCH_URL = isDev() ? \"http://localhost:5000/covid19/\" : \"https://coronatracker-rest.herokuapp.com/covid19/\";\nexport const PREFETCH_URL = isDev() ? \"http://localhost:5000/valid-countries\" : \"https://coronatracker-rest.herokuapp.com/valid-countries\";","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Grid, Typography, Link } from \"@material-ui/core\";\n\nimport SearchBar from './SearchBar/SearchBar';\nimport SearchButton from \"./SearchButton/SearchButton\";\nimport ErrorAlert from './Alerts/ErrorAlert';\nimport GraphBundle from './Graph/GraphBundle';\nimport TabsContainer from './Tabs/TabsContainer';\nimport CountryTab from './Tabs/CountryTab';\nimport { getCountry, FETCH_URL, PREFETCH_URL } from '../helpers/misc';\nimport { strings } from \"../helpers/strings\"\n\nimport '../style/App.css';\n\nclass App extends Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      countries: [],\n      idxValue: 0,\n      userInput: '',\n      datum: [],\n      scale: \"log\",\n      tabs: [],\n      tabIndex: 0,\n      validCountries: [],\n      validated: \"\"\n    };\n\n    /* Bindings */\n    this.clearState = this.clearState.bind(this);\n    this.handleTabChange = this.handleTabChange.bind(this);\n    this.onStepClick = this.onStepClick.bind(this);\n    this.updateInputState = this.updateInputState.bind(this);\n    this.updateIndexState = this.updateIndexState.bind(this);\n    this.updateScale = this.updateScale.bind(this);\n    this.updateValidation = this.updateValidation.bind(this);\n  };\n\n  fetchData = () => {\n    const { countries, datum, tabs, userInput, validCountries } = this.state;\n    let maybeCountry;\n\n    maybeCountry = getCountry(userInput, countries);\n    if (maybeCountry) {\n      this.setState({\n        idxValue: 0,\n        tabIndex: countries.indexOf(maybeCountry)\n      });\n      return;\n    }\n\n    maybeCountry = getCountry(userInput, validCountries);\n    if (maybeCountry) {\n      // prepare the data; limit tabs to 8\n      const n = countries.length\n      const MAX_TABS = 8;\n      const currCountries = n < MAX_TABS ? countries: countries.slice(0, -1);\n      const currDatum = n < MAX_TABS ? datum : datum.slice(0, -1);\n      const currTabs = n < MAX_TABS ? tabs : tabs.slice(0, -1)\n\n      const url = FETCH_URL + maybeCountry;\n      axios.get(url).then(res => {\n        this.setState({\n          countries: [...currCountries, maybeCountry],\n          datum: [...currDatum, res.data],\n          idxValue: 0,\n          tabs: [...currTabs, this.newTab(maybeCountry, currTabs.length)],\n          tabIndex: currTabs.length,\n          validated: \"\"\n        });\n      }).catch(err => {\n        this.clearState(strings.fetch);\n        console.error(err);\n      });\n    } else {\n      this.setState({\n        idxValue: 0,\n        validated: strings.invalid\n      });\n    }\n  }\n\n  prefetchData = () => {\n    axios.get(PREFETCH_URL).then(res => {\n      this.setState({\n        validCountries: res.data\n      })\n    }).catch(err => {\n      this.updateValidation(strings.fetch)\n      console.error(err);\n    })\n  };\n\n  newTab = (country, index) => {\n    return (\n      <CountryTab\n        country={country}\n        key={index}\n        index={index}\n        handleClose={this.removeTab}\n        handleChange={this.handleTabChange}\n      />\n    )\n  }\n\n  removeTab = (e, index) => {\n    e.stopPropagation();\n\n    const { countries, datum, tabs, tabIndex } = this.state;\n    const fn = (_, i) => i !== index;\n    const newTabIndex = index > tabIndex ? tabIndex : Math.max(0, tabIndex - 1);\n    const newTabs = tabs.map((tab, i) => {\n      return i > index ? this.newTab(countries[i], i - 1) : tab;\n    })\n\n    this.setState({\n      countries: countries.filter(fn),\n      datum: datum.filter(fn),\n      tabs: newTabs.filter(fn),\n      tabIndex: newTabIndex\n    });\n  }\n\n  showTabs = () => {\n    const { tabs, tabIndex } = this.state;\n    return tabs.length === 0\n      ? (<></>)\n      : (\n        <TabsContainer\n          clearState={this.clearState}\n          handleTabChange={this.handleTabChange}\n          tabs={tabs}\n          tabIndex={tabIndex}\n          removeTab={this.removeTab}\n        />\n      )\n  }\n\n  showGraphs = () => {\n    const { countries, datum, idxValue, scale, tabIndex } = this.state;\n    return datum.length === 0\n      ? (<></>)\n      : (\n        <GraphBundle\n          country={countries[tabIndex]}\n          data={datum[tabIndex]}\n          indexValue={idxValue}\n          scale={scale}\n          onStepClick={this.onStepClick}\n          updateIndexState={this.updateIndexState}\n          updateScale={this.updateScale}\n        />\n      )\n  }\n\n  clearState = (validated) => {\n    this.setState({\n      countries: [],\n      datum: [],\n      tabs: [],\n      idxValue: 0,\n      tabIndex: 0,\n      validated: validated\n    });\n  }\n\n  onStepClick = (n, increment) => {\n    const { idxValue } = this.state;\n    if (increment) {\n      this.setState({\n        idxValue: idxValue < n ? idxValue + 1 : 0\n      })\n    } else {\n      this.setState({\n        idxValue: idxValue > 0 ? idxValue - 1 : n\n      })\n    }\n  }\n\n  handleTabChange = (value) => {\n    this.setState({\n      tabIndex: value\n    })\n  }\n\n  updateInputState = (value) => {\n    this.setState({\n      userInput: value\n    })\n  }\n\n  updateIndexState = (idx) => {\n    this.setState({\n      idxValue: idx\n    })\n  }\n\n  updateScale = (scale) => {\n    this.setState({\n      scale: scale\n    })\n  }\n\n  updateValidation = (validated) => {\n    this.setState({\n      validated: validated\n    })\n  }\n\n  componentDidMount() {\n    this.prefetchData();\n  };\n\n  render() {\n    const { validated, validCountries, userInput } = this.state;\n\n    return (\n      <div id=\"root-app\">\n        <ErrorAlert open={validated !== \"\"} message={validated} handleClose={() => this.updateValidation(\"\")} />\n        <Grid container spacing={2} direction=\"row\" justify=\"center\" alignItems=\"center\" >\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <Typography variant=\"body1\" color=\"inherit\" align=\"center\" style={{ marginTop: 40 }}>\n              Tracking COVID-19 movements and trends - search \"Global\" to get world view\n            </Typography>\n          </Grid>\n          <Grid item sm xs md lg />\n          <Grid item xs={5} sm={5} md={4} lg={4}>\n            <SearchBar\n              suggestions={validCountries}\n              fetchData={this.fetchData}\n              updateState={this.updateInputState}\n              value={userInput}\n            />\n          </Grid>\n          <Grid item sm={3} xs={3} md={2} lg={2}>\n            <SearchButton fetchData={this.fetchData} />\n          </Grid>\n          <Grid item sm xs md lg />\n        </Grid>\n        { this.showTabs() }\n        { this.showGraphs() }\n        <Grid item sm xs>\n          <Typography align=\"center\" variant=\"body1\" style={{ margin: 20 }}>\n            Big thanks to the <Link href=\"https://github.com/CSSEGISandData/COVID-19\" color=\"primary\" variant=\"body1\">John Hopkins CSSE</Link> for the data!\n          </Typography>\n        </Grid>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}